{"version":3,"sources":["themes/index.ts","scenes/keyboard/slice.ts","app/hooks.ts","scenes/keyboard/instrument.tsx","scenes/keyboard/scalegroups.tsx","scenes/keyboard/scales.tsx","scenes/keyboard/index.tsx","scenes/about/index.tsx","scenes/main/index.tsx","examples/counter/counterAPI.ts","examples/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["createGlobalStyle","getColor","colorId","store","colors","black","grey","grey_light","white","blue","green","yellow","red","purple","shadows","z1","z2","z3","breakpoints","mobile_tiny","mobile_medium","mobile_large","tablet","desktop","NOTES","SPECIAL_ACCIDENTALS","SCALES","label","intervals","keyboardSlice","createSlice","name","initialState","activeNote","activeScale","reducers","setActiveNote","state","action","payload","setActiveScale","actions","getActiveNote","keyboard","getActiveScale","selectAllOctiveNotes","createSelector","notes","Array","from","length","map","k","idx","octave","Math","floor","noteLabel","selectActiveScale","octaveNotes","curIdx","findIndex","oN","scaleDef","id","interval","selectAllMajorScales","Object","keys","scaleKey","getScaleStatus","octaveNote","scaleNotes","includes","selectKeyboardKeys","allOctaveNotes","activeScaleObj","startIdx","split","note","keyStyle","scaleStatus","type","useAppDispatch","useDispatch","useAppSelector","useSelector","ScContainer","styled","div","ScInstrument","ScKeyboardBaseKey","p","css","ScKeyboardKey","ScAccidentalKeyboardKey","Instrument","dispatch","onClick","e","keyObj","ctrlKey","console","log","ScScaleNote","li","ScScaleGroup","ScScaleLabel","isActive","ScaleGroups","allScales","scaleObj","clickedId","Scales","Keyboard","About","ScHeader","ScStage","ScCopyright","a","Main","useState","collapsed","setCollapsed","pages","route","text","element","className","i","to","path","href","target","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","response","counterSlice","value","status","increment","decrement","incrementByAmount","extraReducers","builder","addCase","pending","fulfilled","configureStore","reducer","counter","counterReducer","keyboardReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a54276fb.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\r\n\r\nexport default createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    outline:0;\r\n    box-sizing:border-box;\r\n  }\r\n  #root{\r\n    margin:0 auto;\r\n  }\r\n  h1, h2, h3, h4{\r\n    font-family: 'Bevan', cursive;\r\n  }\r\n  a, p, span, h5, h6{\r\n    font-family: 'Cabin', sans-serif;\r\n  }\r\n  h1{\r\n    font-size: 5rem;\r\n  }\r\n  h2{\r\n    font-size: 4rem;\r\n  }\r\n  h3{\r\n    font-size: 3.5rem;\r\n  }\r\n  h4{\r\n    font-size: 2.5rem;\r\n  }\r\n  h5{\r\n    font-size: 2rem;\r\n  }\r\n  p, span{\r\n    font-size:2rem;\r\n  }\r\n\r\n  html{\r\n    font-size: 62.5%;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    font-family: 'Cabin', sans-serif;\r\n    background-color: black;\r\n  }\r\n  \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n  }\r\n`\r\n\r\n/*\r\nexport const mixinFontFamily = (style) => {\r\n  switch(style){\r\n    case 'details' : return css`font-family: 'Roboto', sans-serif`;\r\n    case 'display': return css`font-family: 'Bevan', cursive`;\r\n    default: return css`font-family: 'Roboto', sans-serif`;\r\n  }\r\n}\r\n*/\r\nexport const listColors = () => {\r\n  return Object.keys(store.colors);\r\n}\r\n\r\n\r\nexport const getColor = (colorId: tColor) => {\r\n  return store.colors[colorId] as CssString; \r\n}\r\n\r\nexport const getShadow = (shadowId: tShadow) => {\r\n  return store.shadows[shadowId] as CssString;\r\n}\r\n\r\nexport const getBreakpoint = (breakpointId: tBreakpoint) => {\r\n  return store.breakpoints[breakpointId] as CssString;\r\n}\r\n\r\ntype CssString = string;\r\n\r\ntype tShadow = 'z1' | 'z2' | 'z3';\r\nconst shadows = {\r\n  z1: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.16)',\r\n  z2: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.36)',\r\n  z3: '-.2rem .5rem 1rem .2rem rgba(0,0,0,.36)'\r\n}\r\ntype tColor = 'black' | 'grey' | 'grey_light' | 'white' | 'blue' | 'green' | 'yellow' | 'red' | 'purple';\r\nconst colors = {\r\n  black: '#000000',\r\n  grey: '#373737',\r\n  grey_light: '#A39F8E',\r\n  white: '#fef8dd',\r\n  blue: '#1fb9f3',\r\n  green: '#51f249',\r\n  yellow: '#fff249',\r\n  red: '#F55658',\r\n  purple: '#6b1ff3'\r\n}\r\n\r\ntype tBreakpoint = 'mobile_tiny' | 'mobile_medium' | 'mobile_large' | 'tablet' | 'desktop';\r\nconst breakpoints = {\r\n  mobile_tiny: '300px',\r\n  mobile_medium: '400px',\r\n  mobile_large: '500px',\r\n  tablet: '768px',\r\n  desktop: '1024px'\r\n}\r\n\r\ntype ThemeStore = {\r\n  colors: typeof colors,\r\n  shadows: typeof shadows,\r\n  breakpoints: typeof breakpoints\r\n}\r\n\r\nexport const store: ThemeStore = {\r\n  colors: colors,\r\n  shadows: shadows,\r\n  breakpoints: breakpoints\r\n}\r\n","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\n\r\nexport interface KeyboardState {\r\n  activeNote: string | null;\r\n  activeScale: string | null;\r\n}\r\n\r\nconst initialState: KeyboardState = {\r\n  activeNote: null,\r\n  activeScale: null,\r\n};\r\n\r\ntype NoteType = 'normal' | 'accidental';\r\ntype NoteName = 'A' | 'A#' | 'B' | 'B#' | 'C' | 'C#' | 'D' | 'D#' | 'E' | 'E#' | 'F' | 'F#';\r\nconst NOTES: NoteName[] = [ 'A', 'A#', 'B', 'B#', 'C', 'C#', 'D', 'D#', 'E', 'E#', 'F', 'F#' ];\r\nconst SPECIAL_ACCIDENTALS: NoteName[] = [ 'A#', 'C#', 'D#' ];\r\nconst SCALES = {\r\n  'ionian': {\r\n    label: 'Ionian (Major)',\r\n    intervals: [0,2,2,1,2,2,2,1]\r\n  } as ScaleDef,\r\n  'dorian': {\r\n    label: 'Dorian',\r\n    intervals: [0,2,1,2,2,2,1,2]\r\n  } as ScaleDef,\r\n  'phyrgian': {\r\n    label: 'Phyrgian',\r\n    intervals: [0,1,2,2,2,1,2,2]\r\n  } as ScaleDef,\r\n  'lydian': {\r\n    label: 'Lydian',\r\n    intervals: [0,2,2,2,1,2,2,1]\r\n  } as ScaleDef,\r\n  'mixolydian': {\r\n    label: 'Mixolydian',\r\n    intervals: [0,2,2,1,2,2,1,2]\r\n  } as ScaleDef,\r\n  'aeolian': {\r\n    label: 'Aeolian (Minor)',\r\n    intervals: [0,2,1,2,2,1,2,2]\r\n  } as ScaleDef,\r\n  'locrian': {\r\n    label: 'Locrian',\r\n    intervals: [0,1,2,2,1,2,2,2]\r\n  } as ScaleDef\r\n};\r\n\r\nconst NUM_KEYS = 29;\r\nconst START_OCTAVE_NOTE = 'A-4';\r\nconst NUM_OCTAVES = 9;\r\n\r\nexport type ScaleStatus = 'root' | 'scale' | 'inactive';\r\nexport type KeyObj = {\r\n  note: NoteName,\r\n  octaveNote: string,\r\n  keyStyle: boolean,\r\n  scaleStatus: ScaleStatus,\r\n  type: NoteType,\r\n  idx: number\r\n}\r\n\r\nexport type ScaleDef = {\r\n  label: string,\r\n  intervals: number[]\r\n}\r\n\r\nexport type ScaleObj = {\r\n  id: string,\r\n  label: string,\r\n  octaveNotes: string[]\r\n}\r\n\r\nexport const keyboardSlice = createSlice({\r\n  name: 'keyboard',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    setActiveNote: (state, action: PayloadAction<string>) => {\r\n      state.activeNote = action.payload;\r\n    },\r\n    setActiveScale: (state, action: PayloadAction<string>) => {\r\n      if(state.activeScale === action.payload){\r\n        state.activeScale = null;\r\n      }else{\r\n        state.activeScale = action.payload;\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setActiveNote, setActiveScale } = keyboardSlice.actions;\r\n\r\nexport const getActiveNote = (state: RootState) => state.keyboard.activeNote;\r\nexport const getActiveScale = (state: RootState) => state.keyboard.activeScale;\r\nexport const getNotes = (state: RootState) => NOTES;\r\n\r\n\r\n// generate A-1, A#-1, B-1, B#-1...\r\nexport const selectAllOctiveNotes = createSelector(\r\n  [getNotes],\r\n  (notes): string[] => {\r\n    const keys = Array.from(Array(NUM_OCTAVES * NOTES.length));\r\n    return keys.map((k, idx) => {\r\n      const octave = Math.floor(idx / notes.length);\r\n      const noteLabel = notes[(idx) % notes.length];\r\n      return `${noteLabel}-${octave}`;\r\n    });\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const selectActiveScale = createSelector(\r\n  [getActiveScale, getActiveNote, selectAllOctiveNotes],\r\n  (activeScale, activeNote, octaveNotes): ScaleObj | null => {\r\n    if(!activeNote || !activeScale) return null;\r\n    let curIdx = octaveNotes.findIndex(oN => oN === activeNote);\r\n    // @ts-ignore\r\n    const scaleDef = SCALES[activeScale] as ScaleDef;\r\n\r\n    return {\r\n      id: activeScale,\r\n      label: scaleDef.label,\r\n      octaveNotes: scaleDef.intervals.map(interval => {\r\n        curIdx += interval;\r\n        return octaveNotes[curIdx];\r\n      })\r\n    };\r\n  }\r\n);\r\n\r\nexport const selectAllMajorScales = createSelector(\r\n  [getActiveNote, selectAllOctiveNotes],\r\n  (activeNote, octaveNotes): ScaleObj[] | null => {\r\n    if(!activeNote) return null;\r\n\r\n    return Object.keys(SCALES).map(scaleKey => {\r\n      let curIdx = octaveNotes.findIndex(oN => oN === activeNote);\r\n      // @ts-ignore\r\n      const scaleDef = SCALES[scaleKey] as ScaleDef;\r\n\r\n      return {\r\n        id: scaleKey,\r\n        label: scaleDef.label,\r\n        octaveNotes: scaleDef.intervals.map(interval => {\r\n          curIdx += interval;\r\n          return octaveNotes[curIdx];\r\n        })\r\n      };\r\n    });\r\n  }\r\n);\r\n\r\nexport const getScaleStatus = (octaveNote: string, scaleNotes: string[]): ScaleStatus => {\r\n  if(!scaleNotes.includes(octaveNote)) return 'inactive';\r\n\r\n  if(octaveNote === scaleNotes[0] || octaveNote === scaleNotes[scaleNotes.length - 1]){\r\n    return 'root';\r\n  }\r\n  return 'scale';\r\n}\r\n\r\nexport const selectKeyboardKeys = createSelector(\r\n  [selectAllOctiveNotes, selectActiveScale],\r\n  (allOctaveNotes, activeScaleObj): KeyObj[] => {\r\n    const keys = Array.from(Array(NUM_KEYS));\r\n    const startIdx = allOctaveNotes.findIndex(oN => oN === START_OCTAVE_NOTE);\r\n    return keys.map((k, idx) => {\r\n      const octaveNote = allOctaveNotes[idx + startIdx];\r\n      const noteLabel = octaveNote.split('-')[0] as NoteName;\r\n      return {\r\n        note: noteLabel,\r\n        octaveNote: octaveNote,\r\n        keyStyle: SPECIAL_ACCIDENTALS.includes(noteLabel),\r\n        scaleStatus: activeScaleObj ? getScaleStatus(octaveNote, activeScaleObj.octaveNotes) : 'inactive',\r\n        type: noteLabel.includes('#') ? 'accidental' : 'normal',\r\n        idx\r\n      };\r\n    })\r\n  }\r\n);\r\n\r\nexport default keyboardSlice.reducer;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import styled, { css } from 'styled-components';\r\nimport { getColor } from '../../themes';\r\n\r\nimport {\r\n  KeyObj,\r\n  ScaleStatus,\r\n  selectKeyboardKeys,\r\n  setActiveNote,\r\n} from './slice';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\n\r\n\r\nexport const ScContainer = styled.div`\r\n  display:block;\r\n  text-align:center;\r\n`\r\n\r\nconst ScInstrument = styled.div`\r\n  padding: 1rem;\r\n  background-color: ${getColor('blue')};\r\n  border: 1rem solid ${getColor('white')};\r\n  border-radius: 1rem;\r\n  width: max-content;\r\n  margin: auto;\r\n`\r\n\r\ntype ScKeyboardKeyProps = {\r\n  scaleStatus: ScaleStatus\r\n}\r\n\r\nexport const ScKeyboardBaseKey = styled.div<ScKeyboardKeyProps>`\r\n  ${p => p.scaleStatus === 'root' && css`\r\n    border: .5rem solid ${getColor('red')};\r\n  `}\r\n\r\n  ${p => p.scaleStatus === 'scale' && css`\r\n    border: .5rem dashed ${getColor('red')};\r\n  `}\r\n`\r\n\r\nexport const ScKeyboardKey = styled(ScKeyboardBaseKey)`\r\n  position:relative;\r\n  display:inline-block;\r\n  width:4rem;\r\n  height:13rem;\r\n  margin-left: .25rem;\r\n  margin-right: .25rem;\r\n  background-color: ${getColor('white')};\r\n  cursor: pointer;\r\n\r\n  &:hover{\r\n    background-color: ${getColor('green')};\r\n  }\r\n  \r\n  span{\r\n    position:absolute;\r\n    bottom:.5rem;\r\n    left:50%;\r\n    transform: translateX(-50%);\r\n  }\r\n`\r\n\r\ntype ScAccidentalKeyboardKeyProps = {\r\n  keyStyle: boolean\r\n}\r\n\r\nexport const ScAccidentalKeyboardKey = styled(ScKeyboardBaseKey)<ScAccidentalKeyboardKeyProps>`\r\n  position:absolute;\r\n  display:inline-block;\r\n  z-index:1;\r\n  width:3rem;\r\n  height:7rem;  \r\n  margin-left:-1.5rem;\r\n  \r\n  ${p => p.keyStyle ? css`\r\n    background-color: ${getColor('black')};\r\n  ` : css`\r\n    background-color: ${getColor('grey_light')};\r\n  `}\r\n  \r\n  color: ${getColor('white')};\r\n  cursor: pointer;\r\n  box-shadow: .25rem .25rem .5rem .1rem ${getColor('blue')};\r\n\r\n  &:hover{\r\n    background-color: ${getColor('green')};\r\n    box-shadow: .5rem .5rem .5rem .1rem ${getColor('blue')};\r\n  }\r\n\r\n  span{\r\n    font-size:1rem;\r\n    position:absolute;\r\n    bottom:.5rem;\r\n    left:50%;\r\n    transform: translateX(-50%);\r\n  }\r\n`\r\n\r\nexport function Instrument() {\r\n  const keys = useAppSelector(selectKeyboardKeys);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onClick = (e:any, keyObj:KeyObj) => {\r\n    if(e.ctrlKey){\r\n      dispatch(setActiveNote(keyObj.octaveNote))\r\n    }\r\n\r\n    console.log(`play ${keyObj.octaveNote}`);\r\n  }\r\n\r\n  return (\r\n    <ScContainer>\r\n      <ScInstrument>\r\n        {keys.map((keyObj, idx) => {\r\n          if(keyObj.type === 'accidental'){\r\n            return (\r\n              <ScAccidentalKeyboardKey \r\n                  key={keyObj.idx}\r\n                  onClick={e => onClick(e, keyObj)}\r\n                  keyStyle={keyObj.keyStyle}\r\n                  scaleStatus={keyObj.scaleStatus}\r\n              >\r\n                  <span>{keyObj.note}</span>\r\n              </ScAccidentalKeyboardKey>\r\n            );\r\n          }else{\r\n            return (\r\n              <ScKeyboardKey\r\n                key={keyObj.idx}\r\n                scaleStatus={keyObj.scaleStatus}\r\n                onClick={e => onClick(e, keyObj)}\r\n              >\r\n                <span>{keyObj.note}</span>\r\n              </ScKeyboardKey>\r\n            );\r\n          }\r\n        })}\r\n      </ScInstrument>\r\n    </ScContainer>\r\n  );\r\n}\r\n","import styled, { css } from 'styled-components';\r\nimport { getColor } from '../../themes';\r\n\r\nimport {\r\n  getActiveNote,\r\n  getActiveScale,\r\n  selectAllMajorScales,\r\n  setActiveScale\r\n} from './slice';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\n\r\nexport const ScContainer = styled.div`\r\n  background-color: ${getColor('purple')};\r\n  display:inline-block;\r\n\r\n  ul{\r\n    list-style:none;\r\n  }\r\n`\r\n\r\nexport const ScScaleNote = styled.li`\r\n  display:inline-block;\r\n  list-style:none;\r\n  margin:.5rem;\r\n`\r\n\r\nexport const ScScaleGroup = styled.div`\r\n  text-align:left;\r\n`\r\ntype ScScaleLabelProps = {\r\n  isActive: boolean\r\n}\r\nexport const ScScaleLabel = styled.p<ScScaleLabelProps>`\r\n  font-weight: bold;\r\n  cursor:pointer;\r\n  &:hover{\r\n    color:white;\r\n  }\r\n\r\n  ${p => p.isActive && css`\r\n    color: ${getColor('green')}\r\n  `}\r\n`\r\n\r\nexport function ScaleGroups() {\r\n  const allScales = useAppSelector(selectAllMajorScales);\r\n  const activeScale = useAppSelector(getActiveScale);\r\n  const activeNote = useAppSelector(getActiveNote);\r\n  const dispatch = useAppDispatch();\r\n  if(!allScales) return null;\r\n\r\n  const onClick = (e:any, clickedId:string) => {\r\n    dispatch(setActiveScale(clickedId));\r\n  }\r\n\r\n  return (\r\n    <ScContainer>\r\n      {allScales.map((scaleObj, idx) => (\r\n        <ScScaleGroup key={scaleObj.id}>\r\n          <ScScaleLabel\r\n            isActive={scaleObj.id === activeScale}\r\n            onClick={e => onClick(e, scaleObj.id)}\r\n          >\r\n            {`${activeNote?.split('-')[0]} ${scaleObj.label}:`}\r\n          </ScScaleLabel>\r\n          <ul>\r\n            {scaleObj.octaveNotes.map(octaveNote => (\r\n              <ScScaleNote key={octaveNote}>\r\n                <span>{octaveNote.split('-')[0]}</span>\r\n              </ScScaleNote>\r\n            ))}\r\n          </ul>\r\n        </ScScaleGroup>\r\n      ))}\r\n    </ScContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { getColor } from '../../themes';\r\n\r\nimport {\r\n  getActiveNote\r\n} from './slice';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport { ScaleGroups } from './scalegroups';\r\n\r\nexport const ScContainer = styled.div`\r\n  background-color: ${getColor('purple')};\r\n  text-align:left;\r\n  display:inline-block;\r\n  padding: 0rem 2rem;\r\n\r\n  ul{\r\n    list-style:none;\r\n  }\r\n\r\n  >h4{\r\n    margin-left:-1rem;\r\n  }\r\n`\r\n\r\nexport function Scales() {\r\n  const activeNote = useAppSelector(getActiveNote);\r\n  if(!activeNote) return null;\r\n\r\n  return (\r\n    <ScContainer>\r\n      <p>{'click a scale name to toggle it on/off'}</p>\r\n      <h4>{'root note'}</h4>\r\n      <p>{activeNote}</p>\r\n      <h4>{'western scales'}</h4>\r\n      <ScaleGroups />\r\n    </ScContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { getColor } from '../../themes';\r\nimport { Instrument } from './instrument';\r\nimport { Scales } from './scales';\r\n\r\nexport const ScContainer = styled.div`\r\n  position:absolute;\r\n  left:0;\r\n  top:0;\r\n  bottom:0;\r\n  right:0;\r\n  background-color: ${getColor('grey')};\r\n  z-index:-1;\r\n  padding-top:5rem;\r\n  \r\n  text-align:center;\r\n\r\n  >h1{\r\n    color: ${getColor('green')};\r\n  }\r\n\r\n  >p{\r\n    color: ${getColor('grey_light')};\r\n    margin-bottom:1rem;\r\n  }\r\n`\r\n\r\nexport function Keyboard() {\r\n  return (\r\n    <ScContainer>\r\n      <h1>{'Altered Chromatic.'}</h1>\r\n      <p>{'ctrl + click to set the key'}</p>\r\n      <Instrument />\r\n      <Scales />\r\n    </ScContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { getColor } from '../../themes';\r\n\r\nexport const ScContainer = styled.div`\r\n  color: ${getColor('green')};\r\n  text-align:center;\r\n  margin-top:5rem;\r\n\r\n  >p{\r\n    color: ${getColor('red')};\r\n  }\r\n`\r\n\r\nexport function About() {\r\n  return (\r\n    <ScContainer>\r\n      <h2>{`I'll explain this soon.`}</h2>\r\n      <p>{`Next feature: play midi sounds`}</p>\r\n    </ScContainer>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { Keyboard } from '../../scenes/keyboard';\r\nimport { About } from '../../scenes/about';\r\nimport { getColor } from '../../themes/';\r\nimport { HashRouter, Route, Routes, Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const GroupContainer = styled.div`\r\n  background-color: ${getColor('blue')};\r\n  border: 1rem solid ${getColor('white')};\r\n  border-radius: 5rem;\r\n  margin: 3rem;\r\n  padding: 2rem 3.3rem;\r\n`;\r\n\r\nexport const ScHeader = styled.div`\r\n  position:fixed;\r\n  top:0;\r\n  left:0;\r\n  transition: top .5s ease-in-out;\r\n\r\n  width: 100%;\r\n  height:10rem;\r\n  border-bottom:.5rem solid ${getColor('blue')};\r\n  color:white;\r\n  z-index:1;\r\n  background-color:black;\r\n\r\n  &.collapsed{\r\n    top:-8rem;\r\n    transition: top .5s ease-in-out;\r\n  }\r\n\r\n  >.link-button{\r\n    color:white;\r\n    display:inline-block;\r\n    vertical-align:middle;\r\n    margin:1.4rem 1.8rem;\r\n    transition: color .5s ease-in;\r\n    &:hover{\r\n      color: ${getColor('yellow')};\r\n      transition: color .2s ease-out;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ScStage = styled.div`\r\n  position:absolute;\r\n  left:0;\r\n  top:0;\r\n  right:0;\r\n  bottom:0;\r\n  padding-top:5rem;\r\n  z-index:-1;\r\n`\r\n\r\nexport const ScCopyright = styled.a`\r\n  position:absolute;\r\n  right:1rem;\r\n  bottom:.5rem;\r\n  color: ${getColor('green')};\r\n  font-size:2rem;\r\n\r\n  font-size:2rem;\r\n  color: ${getColor('blue')};\r\n  &:visited{\r\n    color: ${getColor('blue')};\r\n  }\r\n\r\n  &:hover{\r\n    color: ${getColor('yellow')};\r\n  }\r\n`\r\n\r\nfunction Main() {\r\n  const [ collapsed, setCollapsed ] = useState(true);\r\n  const pages = [\r\n    {\r\n      route: '/',\r\n      text: 'Keyboard',\r\n      element: <Keyboard/>\r\n    },\r\n    {\r\n      route: '/about',\r\n      text: 'About',\r\n      element: <About/>\r\n    }\r\n  ]\r\n  \r\n  return (\r\n    <HashRouter>\r\n      <ScHeader className={ collapsed ? 'collapsed' : ''} onClick={() => setCollapsed(!collapsed)}>\r\n        {pages.map((p, i) => (\r\n          <Link key={i} to={p.route} className=\"link-button\">\r\n            <h2>{p.text}</h2>\r\n          </Link>\r\n        ))}\r\n      </ScHeader>\r\n      <ScStage>\r\n        <Routes>\r\n          {pages.map((p, i) => (\r\n            <Route key={i} path={p.route} element={p.element} />\r\n          ))}\r\n        </Routes>\r\n        <ScCopyright href=\"http://thomasyancey.com\" target=\"_blank\">{'©Tom Yancey, 2022'}</ScCopyright>\r\n      </ScStage>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","// A mock function to mimic making an async request for data\r\nexport function fetchCount(amount = 1) {\r\n  return new Promise<{ data: number }>((resolve) =>\r\n    setTimeout(() => resolve({ data: amount }), 500)\r\n  );\r\n}\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState, AppThunk } from '../../app/store';\r\nimport { fetchCount } from './counterAPI';\r\n\r\nexport interface CounterState {\r\n  value: number;\r\n  status: 'idle' | 'loading' | 'failed';\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n  status: 'idle',\r\n};\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\nexport const incrementAsync = createAsyncThunk(\r\n  'counter/fetchCount',\r\n  async (amount: number) => {\r\n    const response = await fetchCount(amount);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(incrementAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(incrementAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.value += action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport const incrementIfOdd = (amount: number): AppThunk => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentValue = selectCount(getState());\r\n  if (currentValue % 2 === 1) {\r\n    dispatch(incrementByAmount(amount));\r\n  }\r\n};\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from '../examples/counter/counterSlice';\r\nimport keyboardReducer from '../scenes/keyboard/slice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    keyboard: keyboardReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './scenes/main';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './themes/fonts.css';\r\nimport GlobalStyle from './themes/';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Main />\r\n      <GlobalStyle />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}