{"version":3,"sources":["app/hooks.ts","components/mididata.js","scenes/keyboard/piano-key.tsx","scenes/keyboard/piano.tsx","components/musicbox.tsx","themes/index.ts","scenes/keyboard/key-manager.tsx","utils/music.ts","scenes/keyboard/slice.ts","scenes/keyboard/dynamic-bg.tsx","scenes/keyboard/scalegroups.tsx","scenes/keyboard/scales.tsx","scenes/keyboard/index.tsx","scenes/about/index.tsx","assets/github-mark.svg","assets/tune.svg","scenes/header/index.tsx","scenes/main/index.tsx","examples/counter/counterAPI.ts","examples/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","MIDI_DATA","SPECIAL_SHARPS","Anim_RegPress","styled","div","Anim_SharpPress","ScKeyBase","ScNoteLabel","span","CSS_WhiteKey","getColor","CSS_BlackKey","CSS_BlueKey","ScWholeKey","p","scaleStatus","css","ScHalfKey","altKey","ScKeyWrapperBase","ScWholeKeyWrapper","keyPressed","ScHalfKeyWrapper","PianoWholeKey","noteObj","onClick","e","note","idx","PianoHalfKey","includes","ScContainer","ScPianoBar","ScPiano","ScPianoBg","ScPianoKeys","Piano","pianoKeys","selectKeyboardKeysWithPressed","dispatch","ctrlKey","setActiveNote","octaveNote","global","globalMidiHandler","midiNote","onKeyPressed","key","foundPianoKey","find","pK","keyMatch","undefined","onKeysChanged","keys","setPressedKeys","midiInstrument","defaultInstrument","volume","map","midiSounds","MIDI_INSTRUMENT_DATA","midiDataJSON","MusicBox","useEffect","instrumentId","foundInstrument","instruments","id","cacheInstrument","midiId","setMasterVolume","notes","playChordNow","playMidiNotes","style","ref","appElementName","createGlobalStyle","colorId","store","colors","black","grey","grey_light","white","red","orange","green","yellow","blue","blue_dark","pink","shadows","z1","z2","z3","breakpoints","mobile_tiny","mobile_medium","mobile_large","tablet","desktop","KeyManager","watchKeys","useState","curKeys","setCurKeys","handlePressStart","handlePressFinish","filter","k","document","addEventListener","removeEventListener","usePressObserver","KEYBOARD_MAP","prevKeys","useRef","current","usePreviousKeys","forEach","NOTES","MIDI_NOTE_REF","SCALES","label","intervals","getArrayValueAtRelativeIndex","array","length","getNotesInScale","rootNote","scaleKey","wrapRootNote","noteIdx","findIndex","n","scale","console","error","curIdx","scaleNotes","interval","transformScaleNotesToOctaveNotes","scaleNoteNames","startOctave","lastNoteIdx","curOctave","snn","thisNoteIdx","nn","getOctaveNotesInScale","rootOctaveNote","notePieces","split","parseInt","getScaleObject","octaveNotes","getAllOctaveNotesBetween","startOctaveNote","endOctaveNote","toIdx","startPieces","endPieces","startNote","startNoteIdx","indexOf","noteNames","minOctave","maxOctave","i","push","transformNotesToOctaveNotes","_","indexOfEnd","slice","convertOctaveNoteToMidiId","delta","firstOctaveNote","secondOctaveNote","firstPieces","secondPieces","firstIdx","firstOctave","secondIdx","getOctaveNoteDelta","PIANO_RANGE","keyboardSlice","createSlice","name","initialState","activeNote","activeScale","pressedKeys","reducers","state","action","payload","setActiveScale","actions","getActiveNote","keyboard","getActiveScale","selectActiveScale","createSelector","selectAllMajorScales","Object","getScaleStatus","selectKeyboardKeys","activeScaleObj","keyboardKeys","kk","ScWrapper","rotateBg","duration","DynamicBg","ScScaleNote","li","ScScaleGroup","ScScaleLabel","isActive","ScaleGroups","allScales","scaleObj","clickedId","ScScales","ScScalesBg","Scales","ScLogo","ScInstruction","ScPianoContainer","Keyboard","ScLeft","ScTable","ScRowPair","oldNotes","newNotes","About","nN","ScHeader","ScHeaderBg","ScShadowFixer","ScTuneIcon","Icon_Tune","ScHeaderTab","ScGithubIcon","Icon_Github","ScGithub","a","Header","pages","collapsed","setCollapsed","className","to","route","text","href","target","ScStage","ScCopyright","Main","element","path","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","response","counterSlice","value","status","increment","decrement","incrementByAmount","extraReducers","builder","addCase","pending","fulfilled","configureStore","reducer","counter","counterReducer","keyboardReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ac1f34ae.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","const MIDI_DATA = {\n  \"defaultInstrument\": \"piano\",\n  \"instruments\":{\n    \"piano\": {\n      \"midiId\": 5,\n      \"title\": \"Piano\"\n    },\n    \"starfield\": {\n      \"midiId\": 62,\n      \"title\": \"Starfield\"\n    }\n  }\n};\n\nexport default MIDI_DATA;","import styled, { css } from 'styled-components';\r\nimport { getColor } from '../../themes';\r\n\r\nimport { \r\n  CompleteNote,\r\n  NoteName,\r\n  ScaleStatus\r\n} from '../../utils/music';\r\n\r\nexport const SPECIAL_SHARPS: NoteName[] = [ 'A#', 'C#', 'D#' ];\r\nexport const ScContainer = styled.div`\r\n  display:block;\r\n  text-align:center;\r\n`\r\nconst mixin_bounceAnim = () => `\r\n  @keyframes bounce {\r\n    0%, 20%, 50%, 80%, 100% {transform: translateY(0);} \r\n    20% {transform: translateY(-3px);} \r\n    60% {transform: translateY(-2.5px);} \r\n  } \r\n`;\r\n\r\nconst Anim_RegPress = `\r\n  margin-top:-.25rem;\r\n  margin-left: -.6rem;\r\n  margin-right: .6rem;\r\n  z-index:0;\r\n\r\n  animation: bounce;\r\n  animation-duration: .25s;\r\n`\r\nconst Anim_SharpPress = `\r\n  animation: bounce;\r\n  animation-duration: .25s;\r\n  z-index:2;\r\n\r\n  >div{\r\n    margin-top:-.25rem;\r\n    margin-left: -.1rem;\r\n    margin-right: .6rem;\r\n  }\r\n`\r\n\r\n\r\n\r\n\r\ntype SKeyBaseProps = {\r\n  scaleStatus: ScaleStatus,\r\n  altKey?: boolean,\r\n}\r\nconst ScKeyBase = styled.div<SKeyBaseProps>`\r\n`\r\n\r\nconst ScNoteLabel = styled.span`\r\n  position:absolute;\r\n  bottom:.25rem;\r\n  left:50%;\r\n  transform: translateX(-50%);\r\n\r\n  font-weight: bold;\r\n  font-size:3rem;\r\n\r\n  opacity:.8;\r\n`\r\n\r\nconst CSS_WhiteKey = `\r\n  color: ${getColor('grey')};\r\n  background-color: ${getColor('white')};\r\n\r\n\r\n  &:hover{\r\n    color: ${getColor('black')};\r\n    background-color: ${getColor('grey_light')};\r\n  }\r\n`\r\nconst CSS_BlackKey = `\r\n  color: ${getColor('grey_light')};\r\n  background-color: ${getColor('black')};\r\n\r\n\r\n  &:hover{\r\n    color: ${getColor('blue')};\r\n    background-color: ${getColor('grey')};\r\n  }\r\n`\r\n\r\nconst CSS_BlueKey = `\r\n  color: ${getColor('white')};\r\n  background-color: ${getColor('blue')};\r\n  \r\n  &:hover{\r\n    color: ${getColor('black')};\r\n    background-color: ${getColor('blue_dark')};\r\n  }\r\n`\r\n\r\nconst ScWholeKey = styled(ScKeyBase)`\r\n  width: 7rem;\r\n  margin-left:.5rem;\r\n  height: 18rem;\r\n  border-radius: 0 0 1rem 1rem;\r\n  \r\n  ${CSS_WhiteKey}\r\n  box-shadow: .25rem .25rem .75rem .5rem ${getColor('black')};\r\n\r\n  ${p => p.scaleStatus === 'invalid' && css`\r\n    opacity:.15;\r\n  `}\r\n\r\n  ${p => p.scaleStatus === 'root' && css`\r\n    ${CSS_BlueKey}\r\n  `}\r\n`\r\n\r\nconst ScHalfKey = styled(ScKeyBase)`\r\n  width:5rem;\r\n  height:10rem;\r\n  border-radius: 0 0 1rem 1rem;\r\n  \r\n  ${CSS_BlackKey}\r\n  box-shadow: .15rem .15rem .25rem .25rem ${getColor('blue')};\r\n\r\n  ${p => p.scaleStatus === 'invalid' && css`\r\n    opacity:.15;\r\n  `}\r\n\r\n  ${p => p.scaleStatus === 'root' && css`\r\n    ${CSS_BlueKey}\r\n  `}\r\n\r\n  border-radius: 0 0 1rem 1rem;\r\n\r\n  ${p => !p.altKey && css`\r\n    top:.5rem;\r\n    border-radius: 0 0 2.5rem 2.5rem;\r\n\r\n    ${ScNoteLabel}{\r\n      bottom:.75rem;\r\n    }\r\n  `}\r\n`\r\n\r\ntype ScKeyWrapperBaseProps = {\r\n  keyPressed?: boolean\r\n}\r\nconst ScKeyWrapperBase = styled.div<ScKeyWrapperBaseProps>`\r\n  position:relative;\r\n  ${mixin_bounceAnim}\r\n  cursor: pointer;\r\n`\r\n\r\nconst ScWholeKeyWrapper = styled(ScKeyWrapperBase)`\r\n  z-index:1;\r\n\r\n  ${p => p.keyPressed && css`${Anim_RegPress}`}\r\n  &:active{\r\n    ${Anim_RegPress}\r\n  }\r\n`\r\n\r\nconst ScHalfKeyWrapper = styled(ScKeyWrapperBase)`\r\n  z-index:3;\r\n\r\n  ${p => p.keyPressed && css`${Anim_SharpPress}`}\r\n  &:active{\r\n    ${Anim_SharpPress}\r\n  }\r\n\r\n  >div{\r\n    position:absolute;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n  }\r\n`\r\n\r\ntype Props = {\r\n  noteObj: CompleteNote,\r\n  onClick: Function\r\n}\r\nexport function PianoWholeKey({ noteObj, onClick }: Props) {\r\n  return (\r\n    <ScWholeKeyWrapper\r\n      key={noteObj.idx}\r\n      onClick={e => onClick(e, noteObj)}\r\n      keyPressed={noteObj.keyPressed}\r\n    >\r\n      <ScWholeKey scaleStatus={noteObj.scaleStatus}>\r\n        <ScNoteLabel>{noteObj.note}</ScNoteLabel>\r\n      </ScWholeKey>\r\n    </ScWholeKeyWrapper>\r\n  );\r\n}\r\n\r\nexport function PianoHalfKey({ noteObj, onClick }: Props) {\r\n  return (\r\n    <ScHalfKeyWrapper\r\n      key={noteObj.idx}\r\n      onClick={e => onClick(e, noteObj)}\r\n      keyPressed={noteObj.keyPressed}\r\n    >\r\n      <ScHalfKey scaleStatus={noteObj.scaleStatus} altKey={SPECIAL_SHARPS.includes(noteObj.note)}>\r\n        <ScNoteLabel>{noteObj.note}</ScNoteLabel>\r\n      </ScHalfKey>\r\n    </ScHalfKeyWrapper>\r\n  );\r\n}","import styled from 'styled-components';\r\nimport { getColor } from '../../themes';\r\n\r\nimport {\r\n  selectKeyboardKeysWithPressed,\r\n  setActiveNote,\r\n  setPressedKeys,\r\n} from './slice';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { MusicBox } from '../../components/musicbox';\r\nimport { \r\n  CompleteNote\r\n} from '../../utils/music';\r\nimport { KeyManager } from './key-manager';\r\nimport { PianoHalfKey, PianoWholeKey } from './piano-key';\r\nimport MIDI_DATA from '../../components/mididata';\r\n\r\nexport const ScContainer = styled.div`\r\n  display:block;\r\n  text-align:center;\r\n`\r\nconst ScPianoBar = styled.div`\r\n  position:absolute;\r\n  z-index:4;\r\n  left:4rem;\r\n  right:4rem;\r\n  height:3rem;\r\n  top:3rem;\r\n\r\n  background-color: ${getColor('black')};\r\n  border-radius: 1rem;  \r\n  box-shadow: .25rem .25rem .25rem .175rem ${getColor('black')};\r\n`\r\n\r\nconst ScPiano = styled.div`\r\n  position: relative;\r\n  padding: 5rem 1rem;\r\n  width: max-content;\r\n  margin: auto;\r\n  width:max-content;\r\n\r\n  user-select: none; /* supported by Chrome and Opera */\r\n  -webkit-user-select: none; /* Safari */\r\n  -khtml-user-select: none; /* Konqueror HTML */\r\n  -moz-user-select: none; /* Firefox */\r\n  -ms-user-select: none; /* Internet Explorer/Edge */\r\n`\r\n\r\nconst ScPianoBg = styled.div`\r\n  background-color: ${getColor('blue')};\r\n  z-index:-1;\r\n\r\n  position:absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  opacity: .7;\r\n\r\n  border-radius: 2.5rem;\r\n  \r\n  filter: blur(2rem);\r\n`\r\n\r\nconst ScPianoKeys = styled.div`\r\n  position:relative;\r\n  width:100%;\r\n  padding:0 4rem;\r\n\r\n  >div{\r\n    display:inline-block;\r\n    vertical-align:top;\r\n  }\r\n`\r\n\r\nexport function Piano() {\r\n  const pianoKeys = useAppSelector(selectKeyboardKeysWithPressed);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onClick = (e:any, noteObj:CompleteNote) => {\r\n    if(e.ctrlKey){\r\n      dispatch(setActiveNote(noteObj.octaveNote))\r\n    }\r\n\r\n    // @ts-ignore;\r\n    global.globalMidiHandler && global.globalMidiHandler([noteObj.midiNote]);\r\n  }\r\n\r\n  return (\r\n    <ScContainer>\r\n      <KeyManager \r\n        onKeyPressed={(key:string) => {\r\n          const foundPianoKey = pianoKeys.find(pK => pK.keyMatch === key);\r\n          if(foundPianoKey !== undefined){\r\n            // @ts-ignore;\r\n            global.globalMidiHandler && global.globalMidiHandler([foundPianoKey.midiNote]);\r\n          }\r\n        }}\r\n        onKeysChanged={(keys: string[]) => {\r\n          dispatch(setPressedKeys(keys));\r\n        }}\r\n      />\r\n      <MusicBox midiInstrument={MIDI_DATA.defaultInstrument} volume={0.2} />\r\n      <ScPiano>\r\n        <ScPianoBar />\r\n        <ScPianoKeys>\r\n          {pianoKeys.map(noteObj => {\r\n            if(noteObj.note.includes('#')){\r\n              return (\r\n                <PianoHalfKey key={noteObj.idx} noteObj={noteObj} onClick={onClick} />\r\n              );\r\n            }else{\r\n              return (\r\n                <PianoWholeKey key={noteObj.idx} noteObj={noteObj} onClick={onClick} />\r\n              );\r\n            }\r\n          })}\r\n        </ScPianoKeys>\r\n        <ScPianoBg />\r\n      </ScPiano>\r\n    </ScContainer>\r\n  );\r\n}","import { useEffect } from 'react';\r\n// @ts-ignore\r\nimport MIDISounds from 'midi-sounds-react';\r\n\r\nimport midiDataJSON from './mididata.js';\r\n\r\ntype midiInstrumentData = {\r\n  defaultInstrument: string,\r\n  instruments: {\r\n    [instrumentId: string]: {\r\n      midiId: number,\r\n      title: string\r\n    }\r\n  }\r\n}\r\nconst MIDI_INSTRUMENT_DATA = midiDataJSON as midiInstrumentData;\r\n\r\nconst findInstrument = (instrumentId?: string) => {\r\n  if(!instrumentId){\r\n    instrumentId = MIDI_INSTRUMENT_DATA.defaultInstrument;\r\n  }\r\n  return { ...MIDI_INSTRUMENT_DATA.instruments[instrumentId], id: instrumentId }\r\n}\r\n\r\nlet midiSounds: any;\r\nconst playMidiNotes = (notes: number[], midiId: number) => {\r\n  midiSounds.playChordNow(midiId, notes, 2.5);\r\n}\r\n\r\ntype Props = {\r\n  midiInstrument?: string,\r\n  volume: number\r\n}\r\nexport function MusicBox({ midiInstrument, volume }: Props) {\r\n  useEffect(() => {\r\n    const foundInstrument = findInstrument(midiInstrument);\r\n    midiSounds.cacheInstrument(foundInstrument.midiId);\r\n    midiSounds.setMasterVolume(volume);\r\n\r\n    (global as any).globalMidiHandler = (notes: number[]) => playMidiNotes(notes, foundInstrument.midiId);\r\n  }, [midiInstrument, volume])\r\n\r\n  return (\r\n    <div style={{'display':'none'}}>\r\n      <MIDISounds ref={(ref: any) => (midiSounds = ref)} appElementName=\"root\"  />\r\n    </div>\r\n  );\r\n}\r\n","import { createGlobalStyle } from \"styled-components\"\r\n\r\nexport default createGlobalStyle`\r\n  *{\r\n    margin: 0;\r\n    padding: 0;\r\n    outline:0;\r\n    box-sizing:border-box;\r\n  }\r\n  #root{\r\n    margin:0 auto;\r\n  }\r\n  h1, h2, h3, h4{\r\n    font-family: 'Kanit', cursive;\r\n  }\r\n  a, p, span, h5, h6{\r\n    font-family: 'Cabin', sans-serif;\r\n  }\r\n  h1{\r\n    font-size: 5rem;\r\n  }\r\n  h2{\r\n    font-size: 4rem;\r\n  }\r\n  h3{\r\n    font-size: 3.5rem;\r\n  }\r\n  h4{\r\n    font-size: 2.5rem;\r\n  }\r\n  h5{\r\n    font-size: 2rem;\r\n  }\r\n  p, span{\r\n    font-size:2rem;\r\n  }\r\n\r\n  html{\r\n    font-size: 62.5%;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    font-family: 'Cabin', sans-serif;\r\n    background-color: black;\r\n  }\r\n  \r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n  }\r\n`\r\n\r\n/*\r\nexport const mixinFontFamily = (style) => {\r\n  switch(style){\r\n    case 'details' : return css`font-family: 'Roboto', sans-serif`;\r\n    case 'display': return css`font-family: 'Bevan', cursive`;\r\n    default: return css`font-family: 'Roboto', sans-serif`;\r\n  }\r\n}\r\n*/\r\nexport const listColors = () => {\r\n  return Object.keys(store.colors);\r\n}\r\n\r\n\r\nexport const getColor = (colorId: tColor) => {\r\n  return store.colors[colorId] as CssString; \r\n}\r\n\r\nexport const getShadow = (shadowId: tShadow) => {\r\n  return store.shadows[shadowId] as CssString;\r\n}\r\n\r\nexport const getBreakpoint = (breakpointId: tBreakpoint) => {\r\n  return store.breakpoints[breakpointId] as CssString;\r\n}\r\n\r\n\r\nexport const mixin_glowOnHover = (color: tColor) => (`\r\n  transition: filter .2s;\r\n\r\n  &:hover{\r\n    filter: drop-shadow(0 0 1rem ${getColor(color)});\r\n    transition: filter .2s;\r\n  }\r\n`);\r\n\r\ntype CssString = string;\r\n\r\ntype tShadow = 'z1' | 'z2' | 'z3';\r\nconst shadows = {\r\n  z1: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.16)',\r\n  z2: '-0.1rem 0.1rem .25rem .1rem rgba(0,0,0,0.36)',\r\n  z3: '-.2rem .5rem 1rem .2rem rgba(0,0,0,.36)'\r\n}\r\ntype tColor = 'black' | 'grey' | 'grey_light' | 'white' | 'blue' | 'green' | 'yellow' | 'red' | 'pink' | 'orange' | 'blue_dark';\r\nconst colors = {\r\n  black: '#1F1F1F',\r\n  grey: '#4D4D4F',\r\n  grey_light: '#D3D8CF',\r\n  white: '#FFFFFF',\r\n\r\n  red: '#E84744',\r\n  orange: '#E17A31',\r\n  green: '#9FB970',\r\n  yellow: '#E4C137',\r\n  blue: '#63C7D8',\r\n  blue_dark: '#48ABBD',\r\n  pink: '#DA3471',\r\n}\r\n\r\ntype tBreakpoint = 'mobile_tiny' | 'mobile_medium' | 'mobile_large' | 'tablet' | 'desktop';\r\nconst breakpoints = {\r\n  mobile_tiny: '300px',\r\n  mobile_medium: '400px',\r\n  mobile_large: '500px',\r\n  tablet: '768px',\r\n  desktop: '1024px'\r\n}\r\n\r\ntype ThemeStore = {\r\n  colors: typeof colors,\r\n  shadows: typeof shadows,\r\n  breakpoints: typeof breakpoints\r\n}\r\n\r\nexport const store: ThemeStore = {\r\n  colors: colors,\r\n  shadows: shadows,\r\n  breakpoints: breakpoints\r\n}\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { KEYBOARD_MAP } from './slice';\r\n\r\ntype Props = {\r\n  onKeyPressed: Function,\r\n  onKeysChanged: Function\r\n}\r\n\r\nexport function KeyManager({ onKeyPressed, onKeysChanged }: Props) {\r\n  const keys = usePressObserver(KEYBOARD_MAP);\r\n  const prevKeys = usePreviousKeys(keys);\r\n\r\n  useEffect(() => {\r\n    keys.forEach(k => {\r\n      if(prevKeys && !prevKeys.includes(k)){\r\n        onKeyPressed(k);\r\n      }\r\n    });\r\n\r\n    if(keys !== prevKeys){\r\n      onKeysChanged && onKeysChanged(keys);\r\n    }\r\n  }, [ keys, prevKeys, onKeyPressed, onKeysChanged ]);\r\n\r\n  return null;\r\n}\r\n\r\n\r\n// HOOKS\r\nexport function usePressObserver(watchKeys: string[]): string[] {\r\n  const [curKeys, setCurKeys] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    function handlePressStart({ key }: KeyboardEvent): void {\r\n      if(watchKeys.includes(key) && !curKeys.includes(key)){\r\n        setCurKeys([...curKeys, key]);\r\n      }\r\n    }\r\n\r\n    function handlePressFinish({ key }: KeyboardEvent): void {\r\n      if(watchKeys.includes(key)){\r\n        setCurKeys(curKeys.filter(k => k !== key));\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keydown', handlePressStart);\r\n    document.addEventListener('keyup', handlePressFinish);\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', handlePressStart);\r\n      document.removeEventListener('keyup', handlePressFinish);\r\n    };\r\n  }, [watchKeys, curKeys]);\r\n\r\n  return curKeys;\r\n}\r\n\r\ntype RefForKeys = {\r\n  current: string[]\r\n}\r\nexport function usePreviousKeys(keys: string[]): string[] {\r\n  const ref = useRef() as RefForKeys;\r\n\r\n  useEffect(() => {\r\n    ref.current = keys;\r\n  }, [ keys ]);\r\n  return ref.current;\r\n}","export type NoteName = 'A' | 'A#' | 'B' | 'B#' | 'C' | 'C#' | 'D' | 'D#' | 'E' | 'E#' | 'F' | 'F#';\r\n// export type ScaleKey = 'ionian' | 'dorian' | 'phyrgian' | 'lydian' | 'mixolydian' | 'aeolian' | 'locrian';\r\n\r\nexport type ScaleStatus = 'root' | 'scale' | 'invalid'| 'inactive';\r\nexport type CompleteNote = {\r\n  note: NoteName,\r\n  octaveNote: string,\r\n  scaleStatus: ScaleStatus,\r\n  idx: number,\r\n  midiNote: number,\r\n  keyPressed?: boolean,\r\n  keyMatch?: string\r\n}\r\n\r\nexport type ScaleDefs = {\r\n  [key: string]: ScaleDef\r\n}\r\n\r\nexport type ScaleDef = {\r\n  label: string,\r\n  intervals: number[]\r\n}\r\n\r\nexport type ScaleObj = {\r\n  id: string,\r\n  label: string,\r\n  octaveNotes: string[]\r\n}\r\n\r\nexport const NOTES: NoteName[] = [ 'A', 'A#', 'B', 'B#', 'C', 'C#', 'D', 'D#', 'E', 'E#', 'F', 'F#' ];\r\nexport const MIDI_NOTE_REF = {\r\n  octaveNote: 'A-4',\r\n  code: 60\r\n};\r\n\r\nexport const SCALES: ScaleDefs = {\r\n  'ionian': {\r\n    label: 'Ionian (Major)',\r\n    intervals: [2,2,1,2,2,2,1]\r\n  } as ScaleDef,\r\n  'dorian': {\r\n    label: 'Dorian',\r\n    intervals: [2,1,2,2,2,1,2]\r\n  } as ScaleDef,\r\n  'phyrgian': {\r\n    label: 'Phyrgian',\r\n    intervals: [1,2,2,2,1,2,2]\r\n  } as ScaleDef,\r\n  'lydian': {\r\n    label: 'Lydian',\r\n    intervals: [2,2,2,1,2,2,1]\r\n  } as ScaleDef,\r\n  'mixolydian': {\r\n    label: 'Mixolydian',\r\n    intervals: [2,2,1,2,2,1,2]\r\n  } as ScaleDef,\r\n  'aeolian': {\r\n    label: 'Aeolian (Minor)',\r\n    intervals: [2,1,2,2,1,2,2]\r\n  } as ScaleDef,\r\n  'locrian': {\r\n    label: 'Locrian',\r\n    intervals: [1,2,2,1,2,2,2]\r\n  } as ScaleDef\r\n};\r\n\r\nexport const rotateArray = (array: any[], toIdx: number) => {\r\n  return array.map((_, idx) => array[(idx + toIdx) % array.length]);\r\n}\r\n\r\nexport const getArrayValueAtRelativeIndex = (array: any[], idx: number) => array[idx % array.length];\r\n\r\nexport const getNotesInScale = (rootNote: string, scaleKey: string, wrapRootNote = false) => {\r\n  const noteIdx = NOTES.findIndex(n => n === rootNote);\r\n  const scale = SCALES[scaleKey];\r\n  if(noteIdx === -1) {\r\n    console.error(`invalid note provided \"${rootNote}\"`)\r\n    return [];\r\n  };\r\n  if(!scale){\r\n    console.error(`invalid scale provided \"${scaleKey}\"`)\r\n    return [];\r\n  };\r\n\r\n  let curIdx = noteIdx;\r\n  const scaleNotes = scale.intervals.map((interval, idx) => {\r\n    const note = getArrayValueAtRelativeIndex(NOTES, curIdx);\r\n    curIdx += interval;\r\n    return note\r\n  });\r\n\r\n  return !wrapRootNote ? scaleNotes : [...scaleNotes, scaleNotes[0]];\r\n}\r\n\r\n/*\r\n  convert an explicit sequence of asecending notes into octave notes, constrained by octave\r\n  notes received could be (& will usually be) fewer than provided, depending on how the octaves are clamped\r\n\r\n  example: ([ 'F', 'A' ], 1, 2) => [ 'F-1', 'A-2', 'F-2' ]\r\n*/\r\nexport const transformNotesToOctaveNotes = (noteNames: NoteName[], minOctave = 0, maxOctave = 9) => {\r\n  let octaveNotes = [];\r\n  let lastNoteIdx = NOTES.findIndex(n => n === noteNames[0]); // 0 for A\r\n  let curOctave = minOctave; \r\n\r\n  while(curOctave <= maxOctave){\r\n    for(let i = 0; i < noteNames.length; i++){\r\n      const thisNoteIdx = NOTES.findIndex(nn => nn === noteNames[i]);\r\n      if(thisNoteIdx < lastNoteIdx){\r\n        curOctave++;\r\n        if(curOctave > maxOctave) break;\r\n      }\r\n      lastNoteIdx = thisNoteIdx;\r\n      octaveNotes.push(`${noteNames[i]}-${curOctave}`);\r\n    }\r\n  }\r\n\r\n  return octaveNotes;\r\n}\r\n\r\n/*\r\n  convert an explicit sequence of asecending notes into octave notes, starting from an octave\r\n  notes received should be the same length\r\n\r\n  example: ([ 'F', 'A' ], 2) => [ 'F-2', 'A-3' ]\r\n*/\r\nexport const transformScaleNotesToOctaveNotes = (scaleNoteNames: NoteName[], startOctave: number) => {\r\n  let lastNoteIdx = NOTES.findIndex(n => n === scaleNoteNames[0]); // 0 for A\r\n  let curOctave = startOctave; \r\n\r\n  return scaleNoteNames.map(snn => {\r\n    const thisNoteIdx = NOTES.findIndex(nn => nn === snn);\r\n    if(thisNoteIdx < lastNoteIdx){\r\n      curOctave++;\r\n    }\r\n    lastNoteIdx = thisNoteIdx;\r\n\r\n    return `${snn}-${curOctave}`;\r\n  });\r\n}\r\n\r\n/*\r\n  the good good, provide any note, scale, get the octaveNotes back to play\r\n\r\n  example: ('A-1', 'ionian', true) => ['A-1','B-1','C-1','C#-1','D#-1','E#-1','F#-1','A-2']\r\n*/\r\nexport const getOctaveNotesInScale = (rootOctaveNote: string, scaleKey: string, wrapRootNote = false) => {\r\n  const notePieces = rootOctaveNote.split('-');\r\n  const scaleNotes = getNotesInScale(notePieces[0], scaleKey, wrapRootNote);\r\n\r\n  return transformScaleNotesToOctaveNotes(scaleNotes, parseInt(notePieces[1]));\r\n}\r\n\r\nexport const getScaleObject = (rootOctaveNote: string, scaleKey: string): ScaleObj => {\r\n  const scaleDef = SCALES[scaleKey];\r\n\r\n  return {\r\n    id: scaleKey,\r\n    label: scaleDef.label,\r\n    octaveNotes: getOctaveNotesInScale(rootOctaveNote, scaleKey, true)\r\n  }\r\n}\r\n\r\n/*\r\n  \"what are all the chromatic notes between A and B?\" - ex, making piano keys\r\n\r\n  example ('F-2', 'B#-3') => ['F-2','F#-2','A-3','A#-3','B-3','B#-3']\r\n*/\r\nexport const getAllOctaveNotesBetween = (startOctaveNote: string, endOctaveNote: string) => {\r\n  const startPieces = startOctaveNote.split('-');\r\n  const endPieces = endOctaveNote.split('-');\r\n\r\n  const startNote = startPieces[0] as NoteName;\r\n  const startNoteIdx = NOTES.indexOf(startNote);\r\n  const allNotes = rotateArray(NOTES, startNoteIdx);\r\n\r\n  const octaveNotes = transformNotesToOctaveNotes(allNotes, parseInt(startPieces[1]), parseInt(endPieces[1]));\r\n  const indexOfEnd = octaveNotes.indexOf(endOctaveNote);\r\n  return octaveNotes.slice(0, indexOfEnd + 1);\r\n}\r\n\r\n// A-4, B-4, delta is -2 (A-4 < A#-4 < B-4)\r\nexport const getOctaveNoteDelta = (firstOctaveNote: string, secondOctaveNote: string) => {\r\n  const firstPieces = firstOctaveNote.split('-');\r\n  const secondPieces = secondOctaveNote.split('-');\r\n\r\n  const firstIdx = NOTES.indexOf(firstPieces[0] as NoteName);\r\n  const firstOctave = parseInt(firstPieces[1]);\r\n  const secondIdx = NOTES.indexOf(secondPieces[0] as NoteName);\r\n  const secondOctave = parseInt(secondPieces[1]);\r\n\r\n  const octaveChange = (secondOctave - firstOctave) * NOTES.length;\r\n  const idxChange = secondIdx - firstIdx;\r\n  const noteChange = octaveChange + idxChange;\r\n\r\n  return noteChange;\r\n}\r\n\r\n// traditionally, C4 == 60 ... in this wacky world A4 == 60\r\nexport const convertOctaveNoteToMidiId = (octaveNote:string) => {\r\n  const delta = getOctaveNoteDelta(MIDI_NOTE_REF.octaveNote, octaveNote);\r\n  return MIDI_NOTE_REF.code + delta;\r\n}","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\nimport { CompleteNote, NoteName, ScaleObj, SCALES, ScaleStatus, getScaleObject, getAllOctaveNotesBetween, convertOctaveNoteToMidiId } from '../../utils/music';\r\n\r\nexport interface KeyboardState {\r\n  activeNote: string | null;\r\n  activeScale: string | null;\r\n  pressedKeys: string[];\r\n}\r\n\r\nconst initialState: KeyboardState = {\r\n  activeNote: null,\r\n  activeScale: null,\r\n  pressedKeys: []\r\n};\r\n\r\nexport const PIANO_RANGE = ['A-4', 'E-5'];\r\nexport const KEYBOARD_MAP = ['a','w','s','e','d','r','f','t','g','y','h','u','j','i','k','o','l','p',';','[','\\''];\r\n\r\nexport const keyboardSlice = createSlice({\r\n  name: 'keyboard',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    setActiveNote: (state, action: PayloadAction<string>) => {\r\n      state.activeNote = action.payload;\r\n    },\r\n    setActiveScale: (state, action: PayloadAction<string>) => {\r\n      if(state.activeScale === action.payload){\r\n        state.activeScale = null;\r\n      }else{\r\n        state.activeScale = action.payload;\r\n      }\r\n    },\r\n    setPressedKeys: (state, action: PayloadAction<string[]>) => {\r\n      state.pressedKeys = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { setActiveNote, setActiveScale, setPressedKeys } = keyboardSlice.actions;\r\n\r\nexport const getActiveNote = (state: RootState) => state.keyboard.activeNote;\r\nexport const getActiveScale = (state: RootState) => state.keyboard.activeScale;\r\nexport const getPressedKeys = (state: RootState) => state.keyboard.pressedKeys;\r\n\r\nexport const selectActiveScale = createSelector(\r\n  [getActiveScale, getActiveNote],\r\n  (activeScale, activeNote): ScaleObj | null => {\r\n    if(!activeNote || !activeScale) return null;\r\n\r\n    return getScaleObject(activeNote, activeScale);\r\n  }\r\n);\r\n\r\nexport const selectAllMajorScales = createSelector(\r\n  [getActiveNote],\r\n  (activeNote): ScaleObj[] | null => {\r\n    if(!activeNote) return null;\r\n\r\n    return Object.keys(SCALES).map(scaleKey => {\r\n      return getScaleObject(activeNote, scaleKey)\r\n    });\r\n  }\r\n);\r\n\r\nexport const getScaleStatus = (octaveNote: string, scaleNotes: string[]): ScaleStatus => {\r\n  if(!scaleNotes.includes(octaveNote)) return 'invalid';\r\n\r\n  if(octaveNote === scaleNotes[0] || octaveNote === scaleNotes[scaleNotes.length - 1]){\r\n    return 'root';\r\n  }\r\n  return 'scale';\r\n}\r\n\r\nexport const selectKeyboardKeys = createSelector(\r\n  [selectActiveScale],\r\n  (activeScaleObj): CompleteNote[] => {\r\n    const octaveNotes = getAllOctaveNotesBetween(PIANO_RANGE[0], PIANO_RANGE[1]);\r\n    return octaveNotes.map((octaveNote, idx) => {\r\n      const noteLabel = octaveNote.split('-')[0] as NoteName;\r\n      return {\r\n        note: noteLabel,\r\n        octaveNote: octaveNote,\r\n        midiNote: convertOctaveNoteToMidiId(octaveNote),\r\n        scaleStatus: activeScaleObj ? getScaleStatus(octaveNote, activeScaleObj.octaveNotes) : 'inactive',\r\n        idx\r\n      };\r\n    })\r\n  }\r\n);\r\n\r\nexport const selectKeyboardKeysWithPressed = createSelector(\r\n  [selectKeyboardKeys, getPressedKeys],\r\n  (keyboardKeys, pressedKeys): CompleteNote[] => {\r\n    return keyboardKeys.map(kk => ({\r\n      ...kk,\r\n      keyMatch: KEYBOARD_MAP[kk.idx],\r\n      keyPressed: pressedKeys.includes(KEYBOARD_MAP[kk.idx])\r\n    }));\r\n  }\r\n)\r\n\r\nexport default keyboardSlice.reducer;\r\n","import styled from 'styled-components';\r\nimport { getColor } from '../../themes';\r\n\r\n\r\nconst CSS_RotateForever = (duration: string) => `\r\n  transform-origin: center;\r\n\r\n  @-webkit-keyframes rotating /* Safari and Chrome */ {\r\n    0% {\r\n      -webkit-transform: rotate(0deg) scale(50%);\r\n      -o-transform: rotate(0deg) scale(50%);\r\n      transform: rotate(0deg) scale(50%);\r\n      filter: blur(10rem);\r\n    }\r\n    50% {\r\n      -webkit-transform: rotate(180deg) scale(150%);\r\n      -o-transform: rotate(180deg) scale(150%);\r\n      transform: rotate(180deg) scale(150%);\r\n      filter: blur(.5rem);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg) scale(50%);\r\n      -o-transform: rotate(360deg) scale(50%);\r\n      transform: rotate(360deg) scale(50%);\r\n      filter: blur(10rem);\r\n    }\r\n  }\r\n  @keyframes rotating {\r\n    0%  {\r\n      -ms-transform: rotate(0deg) scale(50%);\r\n      -moz-transform: rotate(0deg) scale(50%);\r\n      -webkit-transform: rotate(0deg) scale(50%);\r\n      -o-transform: rotate(0deg) scale(50%);\r\n      transform: rotate(0deg) scale(50%);\r\n      filter: blur(10rem);\r\n    }\r\n    50% {\r\n      -ms-transform: rotate(180deg) scale(150%);\r\n      -moz-transform: rotate(180deg) scale(150%);\r\n      -webkit-transform: rotate(180deg) scale(150%);\r\n      -o-transform: rotate(180deg) scale(150%);\r\n      transform: rotate(180deg) scale(150%);\r\n      filter: blur(.5rem);\r\n    }\r\n    100% {\r\n      -ms-transform: rotate(360deg) scale(50%);\r\n      -moz-transform: rotate(360deg) scale(50%);\r\n      -webkit-transform: rotate(360deg) scale(50%);\r\n      -o-transform: rotate(360deg) scale(50%);\r\n      transform: rotate(360deg) scale(50%);\r\n      filter: blur(10rem);\r\n    }\r\n  }\r\n  -webkit-animation: rotating ${duration} linear infinite;\r\n  -moz-animation: rotating ${duration} linear infinite;\r\n  -ms-animation: rotating ${duration} linear infinite;\r\n  -o-animation: rotating ${duration} linear infinite;\r\n  animation: rotating ${duration} linear infinite;\r\n`\r\n\r\n\r\n\r\ntype ScWrapperProps = {\r\n  rotateBg?: boolean\r\n}\r\n\r\nconst ScWrapper = styled.div<ScWrapperProps>`\r\n  position:fixed;\r\n  z-index:-999;\r\n  left:0;\r\n  top:0;\r\n  right:0;\r\n  bottom:0;\r\n\r\n  left:-100%;\r\n  top:-100%;\r\n\r\n  height:300%;\r\n  width:300%;\r\n\r\n  transform: rotate(30deg);\r\n\r\n\r\n  ${p => p.rotateBg ? CSS_RotateForever('40s') : `filter: blur(10rem);`}\r\n\r\n  >div{\r\n    display:inline-block;\r\n    height:100%;\r\n\r\n    &:nth-child(1){\r\n      background-color:${getColor('blue')};\r\n      width:40%;\r\n    }\r\n    &:nth-child(2){\r\n      background-color:${getColor('pink')};\r\n      width:20%;\r\n    }\r\n    &:nth-child(3){\r\n      background-color:${getColor('yellow')};\r\n      width:40%;\r\n    }\r\n  }\r\n`\r\n\r\nexport function DynamicBg() {\r\n  return (\r\n    <ScWrapper rotateBg={true}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </ScWrapper>\r\n  );\r\n}","import styled, { css } from 'styled-components';\r\nimport { getColor } from '../../themes';\r\n\r\nimport {\r\n  getActiveNote,\r\n  getActiveScale,\r\n  selectAllMajorScales,\r\n  setActiveScale\r\n} from './slice';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\n\r\nexport const ScContainer = styled.div`\r\n  background-color: ${getColor('pink')};\r\n  display:inline-block;\r\n\r\n  ul{\r\n    list-style:none;\r\n  }\r\n`\r\n\r\nexport const ScScaleNote = styled.li`\r\n  display:inline-block;\r\n  list-style:none;\r\n  margin:.5rem;\r\n`\r\n\r\nexport const ScScaleGroup = styled.div`\r\n  text-align:left;\r\n`\r\ntype ScScaleLabelProps = {\r\n  isActive: boolean\r\n}\r\nexport const ScScaleLabel = styled.p<ScScaleLabelProps>`\r\n  font-weight: bold;\r\n  cursor:pointer;\r\n  &:hover{\r\n    color:white;\r\n  }\r\n\r\n  ${p => p.isActive && css`\r\n    color: ${getColor('green')}\r\n  `}\r\n`\r\n\r\nexport function ScaleGroups() {\r\n  const allScales = useAppSelector(selectAllMajorScales);\r\n  const activeScale = useAppSelector(getActiveScale);\r\n  const activeNote = useAppSelector(getActiveNote);\r\n  const dispatch = useAppDispatch();\r\n  if(!allScales) return null;\r\n\r\n  const onClick = (e:any, clickedId:string) => {\r\n    dispatch(setActiveScale(clickedId));\r\n  }\r\n\r\n  return (\r\n    <ScContainer>\r\n      {allScales.map((scaleObj, idx) => (\r\n        <ScScaleGroup key={scaleObj.id}>\r\n          <ScScaleLabel\r\n            isActive={scaleObj.id === activeScale}\r\n            onClick={e => onClick(e, scaleObj.id)}\r\n          >\r\n            {`${activeNote?.split('-')[0]} ${scaleObj.label}:`}\r\n          </ScScaleLabel>\r\n          <ul>\r\n            {scaleObj.octaveNotes.map(octaveNote => (\r\n              <ScScaleNote key={octaveNote}>\r\n                <span>{octaveNote.split('-')[0]}</span>\r\n              </ScScaleNote>\r\n            ))}\r\n          </ul>\r\n        </ScScaleGroup>\r\n      ))}\r\n    </ScContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { getColor } from '../../themes';\r\n\r\nimport {\r\n  getActiveNote\r\n} from './slice';\r\nimport { useAppSelector } from '../../app/hooks';\r\nimport { ScaleGroups } from './scalegroups';\r\n\r\nconst ScContainer = styled.div`\r\n  text-align:left;\r\n  display:inline-block;\r\n  padding: 0rem 2rem;\r\n  position: relative;\r\n\r\n  ul{\r\n    list-style:none;\r\n  }\r\n\r\n\r\n  >div{\r\n    margin:1rem;\r\n  }\r\n`\r\n\r\nconst ScScales = styled.div`\r\n  background-color: ${getColor('pink')};\r\n  padding: 1rem 2rem;\r\n  \r\n  >h4{\r\n    text-align:center;\r\n  }\r\n`\r\n\r\nconst ScScalesBg = styled.div`\r\n  background-color: ${getColor('white')};\r\n  border-radius: 2.5rem 2.5rem 0 0;\r\n  position:absolute;\r\n  z-index:-1;\r\n  left:0;\r\n  right:0;\r\n  top:-2rem;\r\n  bottom:0rem;\r\n  filter: blur(1rem);\r\n  opacity:.7;\r\n`\r\n\r\nexport function Scales() {\r\n  const activeNote = useAppSelector(getActiveNote);\r\n  if(!activeNote) return null;\r\n\r\n  return (\r\n    <ScContainer>\r\n      <ScScales>\r\n        <p>{`key: ${activeNote.split('-')[0]}`}</p>\r\n        <p>{`root note: ${activeNote}`}</p>\r\n      </ScScales>\r\n      <ScScales>\r\n        <h4>{'scales'}</h4>\r\n        <p>{'click a scale name to toggle it on/off'}</p>\r\n        <ScaleGroups />\r\n      </ScScales>\r\n      <ScScalesBg />\r\n    </ScContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { getColor } from '../../themes';\r\nimport { DynamicBg } from './dynamic-bg';\r\nimport { Piano } from './piano';\r\nimport { Scales } from './scales';\r\n\r\nconst ScContainer = styled.div`\r\n  position:absolute;\r\n  left:0;\r\n  top:0;\r\n  bottom:0;\r\n  right:0;\r\n  background-color: ${getColor('grey')};\r\n  z-index:-1;\r\n  padding-top:0rem;\r\n  \r\n  text-align:center;\r\n\r\n  >p{\r\n    color: ${getColor('grey_light')};\r\n    margin-bottom:1rem;\r\n  }\r\n`\r\n\r\nconst ScLogo = styled.div`\r\n  width: max-content;\r\n  height: max-content;\r\n  margin: auto;\r\n  position: relative;\r\n  padding: 2rem 2rem 0rem 2rem;\r\n  margin-bottom: -6.5rem;\r\n\r\n  >h1{\r\n    color: ${getColor('black')};\r\n    font-size: 9rem;\r\n\r\n    padding:1rem;\r\n    width: max-content;\r\n    margin:auto;\r\n    font-weight:800;\r\n  }\r\n`\r\n\r\nconst ScLogoBg = styled.div`\r\n  background-color: ${getColor('pink')};\r\n  border-radius: 2.5rem 2.5rem 0 0;\r\n  position:absolute;\r\n  z-index:-1;\r\n  left:0;\r\n  right:0;\r\n  top:0;\r\n  bottom:0;\r\n  filter: blur(2rem);\r\n  opacity:.7;\r\n`;\r\n\r\nconst ScInstruction = styled.p`\r\n  color:yellow !important;\r\n`\r\n\r\nconst ScPianoContainer = styled.div`\r\n  \r\n`\r\n\r\nexport function Keyboard() {\r\n  return (\r\n    <ScContainer>\r\n      <ScLogo>\r\n        <h1>{'Altered Chromatic'}</h1>\r\n        {/* <ScLogoBg /> */}\r\n      </ScLogo>\r\n      <ScPianoContainer>\r\n        <Piano />\r\n      </ScPianoContainer>\r\n      <ScInstruction>{'ctrl + click to set the key & root note'}</ScInstruction>\r\n      <Scales />\r\n      <DynamicBg />\r\n    </ScContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\nimport { getColor } from '../../themes';\r\n\r\nexport const ScContainer = styled.div`\r\n  position:absolute;\r\n  left:0;\r\n  top:0;\r\n  right:0;\r\n  bottom:0;\r\n  background-color: ${getColor('pink')};\r\n\r\n  color: ${getColor('white')};\r\n  text-align:left;\r\n\r\n  padding: 2rem;\r\n  padding-top:5rem;\r\n\r\n  >p{\r\n    color: ${getColor('black')};\r\n  }\r\n\r\n  >div{\r\n    display:inline-block;\r\n    vertical-align:top;\r\n  }\r\n`\r\n\r\nconst ScLeft = styled.div`\r\n  width: calc(100% - 15rem);\r\n  >p{\r\n    margin-bottom: 1rem;\r\n    text-indent: 2rem;\r\n  }\r\n\r\n  padding-right: 4rem;\r\n`\r\n\r\nconst ScTable = styled.div`\r\n  width:15rem;\r\n  padding: 1rem;\r\n  text-align:center;\r\n  margin-top:4rem;\r\n\r\n  border: .5rem solid white;\r\n  border-radius: 1rem;\r\n\r\n  >p{\r\n    margin-top:1rem;\r\n    font-size:1.5rem;\r\n    font-style: italic;\r\n  }\r\n`\r\n\r\nconst ScRowPair = styled.div`\r\n  >span{\r\n    display:inline-block;\r\n    width:50%;\r\n\r\n    border-bottom: .25rem solid white;\r\n\r\n    &:first-child{\r\n      border-right: .25rem solid white;\r\n    }\r\n  }\r\n\r\n  &:first-child{\r\n    >span{\r\n      font-weight:bold;\r\n    }\r\n  }\r\n\r\n  &:last-child{\r\n    >span{\r\n      border-bottom: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst oldNotes = [ 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B' ];\r\nconst newNotes = [ 'A', 'A#', 'B', 'B#', 'C', 'C#', 'D', 'D#', 'E', 'E#', 'F', 'F#' ];\r\n\r\nexport function About() {\r\n  return (\r\n    <ScContainer>\r\n      <ScLeft>\r\n        <h2>{'What is this?'}</h2>\r\n        <p>{'When I started to learn more about music theory, I started getting pretty frustrated when notes were sometimes Sharp and sometimes Flat, and why each scale had to have a note of each letter, and why some letters only have a half step between them (lookin at you E and B)'}</p>\r\n        <p>{'So screw it, here\\'s a more consistent 12-note chromatic notation, and a keyboard that follows the same rules. Since each note has a sharp, the \"G\" notes have been removed all together. In terms of pitch, \"A\" is the same as \"C\".'}</p>\r\n        <h2>{'Just added'}</h2>\r\n        <p>{`redesign`}</p>\r\n        <h2>{'Next feature'}</h2>\r\n        <p>{`scale tools`}</p>\r\n      </ScLeft>\r\n      <ScTable>\r\n        <ScRowPair>\r\n          <span>{'NEW'}</span>\r\n          <span>{'OLD'}</span>\r\n        </ScRowPair>\r\n        {newNotes.map((nN, idx) => (\r\n          <ScRowPair key={idx}>\r\n            <span>{nN}</span>\r\n            <span>{oldNotes[idx]}</span>\r\n          </ScRowPair>\r\n        ))}\r\n      </ScTable>\r\n    </ScContainer>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/github-mark.b055fc89.svg\";","export default __webpack_public_path__ + \"static/media/tune.e447daee.svg\";","import { useState } from 'react';\r\nimport { getColor } from '../../themes/';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Icon_Github from '../../assets/github-mark.svg';\r\nimport Icon_Tune from '../../assets/tune.svg';\r\nimport { PageInfo } from '../main';\r\n\r\nconst ScHeader = styled.div`\r\n  position:fixed;\r\n  top:0;\r\n  left:0;\r\n  transition: top .5s ease-in-out;\r\n  cursor:pointer;\r\n\r\n  width: 100%;\r\n  height:10rem;\r\n\r\n  color:${getColor('white')};\r\n  \r\n\r\n  &.collapsed{\r\n    top:-10.25rem;\r\n    transition: top .5s ease-in-out;\r\n  }\r\n\r\n  >.link-button{\r\n    color:${getColor('black')};\r\n    display:inline-block;\r\n    vertical-align:middle;\r\n    margin:1.4rem 1.8rem;\r\n    transition: color .5s ease-in;\r\n    text-decoration: none;\r\n    &:hover{\r\n      color: ${getColor('white')};\r\n      transition: color .2s ease-out;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ScHeaderBg = styled.div`\r\n  position:absolute;\r\n  z-index:-1;\r\n  left:0;\r\n  right:0;\r\n  top:0;\r\n  bottom:0;\r\n  background-color: ${getColor('blue')};\r\n  box-shadow: .25rem .25rem .75rem .25rem ${getColor('black')};\r\n`\r\n\r\nconst ScShadowFixer = styled.div`\r\n  position:absolute;\r\n  z-index:-1;\r\n  width: 12rem;\r\n  height:1rem;\r\n  bottom:100%;\r\n  left: -3rem;\r\n  background-color: ${getColor('blue')};\r\n  pointer-events:none;\r\n`\r\n\r\nconst ScTuneIcon = styled.div`\r\n  width:100%;\r\n  height:100%;\r\n\r\n  background-color: ${getColor('black')};\r\n  -webkit-mask: url(${Icon_Tune}) no-repeat center;\r\n  mask: url(${Icon_Tune}) no-repeat center;\r\n  mask-size: 100%;\r\n`\r\n\r\nconst ScHeaderTab = styled.div`\r\n  position:absolute;\r\n  z-index:1;\r\n  width:6rem;\r\n  height:5rem;\r\n  right:2rem;\r\n  top:100%;\r\n\r\n  border-radius: 0 0 1rem 1rem;\r\n  background-color: ${getColor('blue')};\r\n  box-shadow: .25rem .25rem .75rem .25rem ${getColor('black')};\r\n\r\n  &:hover{\r\n    ${ScTuneIcon}{\r\n      background-color: ${getColor('white')};\r\n    }\r\n  }\r\n\r\n  padding: 1.25rem;\r\n`\r\n\r\n\r\nconst ScGithubIcon = styled.div`\r\n  width:100%;\r\n  height:100%;\r\n  cursor:pointer;\r\n\r\n  background-color: ${getColor('black')};\r\n  -webkit-mask: url(${Icon_Github}) no-repeat center;\r\n  mask: url(${Icon_Github}) no-repeat center;\r\n  mask-size: 100%;\r\n`\r\n\r\nconst ScGithub = styled.a`\r\n  position: absolute;\r\n  width: 6rem;\r\n  height: 6rem;\r\n  padding: 1rem;\r\n  right: 2rem;\r\n  top:50%;\r\n  transform:translateY(-50%);\r\n  background:0;\r\n  border:0;\r\n\r\n\r\n  &:hover{\r\n    ${ScGithubIcon}{\r\n      background-color: ${getColor('white')};\r\n    }\r\n  }\r\n`\r\n\r\ntype Props = {\r\n  pages: PageInfo[]\r\n}\r\n\r\nfunction Header({ pages }: Props) {\r\n  const [ collapsed, setCollapsed ] = useState(true);\r\n\r\n  return (\r\n    <ScHeader className={ collapsed ? 'collapsed' : ''} onClick={() => setCollapsed(!collapsed)}>\r\n      {pages.map((p, i) => (\r\n        <Link key={i} to={p.route} className=\"link-button\">\r\n          <h2>{p.text}</h2>\r\n        </Link>\r\n      ))}\r\n      <ScGithub href=\"https://github.com/thyancey/altered-chromatic\" target=\"_blank\" >\r\n        <ScGithubIcon />\r\n      </ScGithub>\r\n      <ScHeaderTab>\r\n        <ScTuneIcon />\r\n        <ScShadowFixer />\r\n      </ScHeaderTab>\r\n      <ScHeaderBg/>\r\n    </ScHeader>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { ReactElement } from 'react';\r\nimport { Keyboard } from '../../scenes/keyboard';\r\nimport { About } from '../../scenes/about';\r\nimport { getColor, mixin_glowOnHover } from '../../themes/';\r\nimport { HashRouter, Route, Routes, Link } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\nimport Header from '../header';\r\n\r\nconst ScStage = styled.div`\r\n  position:absolute;\r\n  left:0;\r\n  top:0;\r\n  right:0;\r\n  bottom:0;\r\n  z-index:-1;\r\n`\r\n\r\nconst ScCopyright = styled.a`\r\n  position:absolute;\r\n  right:1rem;\r\n  bottom:.5rem;\r\n  font-size:2rem;\r\n  font-weight:bold;\r\n  color: ${getColor('black')};\r\n  text-decoration: none;\r\n\r\n\r\n  &:visited{\r\n    color: ${getColor('black')};\r\n  }\r\n\r\n  transition: color .2s;\r\n  &:hover{\r\n    transition: color .2s;\r\n    color: ${getColor('blue')};\r\n  }\r\n`\r\n\r\nexport type PageInfo = {\r\n  route: string,\r\n  text: string,\r\n  element: ReactElement\r\n}\r\n\r\nfunction Main() {\r\n  const pages: PageInfo[] = [\r\n    {\r\n      route: '/',\r\n      text: 'Keyboard',\r\n      element: <Keyboard/>\r\n    },\r\n    {\r\n      route: '/about',\r\n      text: 'About',\r\n      element: <About/>\r\n    }\r\n  ]\r\n  \r\n  return (\r\n    <HashRouter>\r\n      <Header pages={pages} />\r\n      <ScStage>\r\n        <Routes>\r\n          {pages.map((p, i) => (\r\n            <Route key={i} path={p.route} element={p.element} />\r\n          ))}\r\n        </Routes>\r\n        <ScCopyright href=\"http://thomasyancey.com\" target=\"_blank\">{'©Tom Yancey, 2022'}</ScCopyright>\r\n      </ScStage>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","// A mock function to mimic making an async request for data\r\nexport function fetchCount(amount = 1) {\r\n  return new Promise<{ data: number }>((resolve) =>\r\n    setTimeout(() => resolve({ data: amount }), 500)\r\n  );\r\n}\r\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState, AppThunk } from '../../app/store';\r\nimport { fetchCount } from './counterAPI';\r\n\r\nexport interface CounterState {\r\n  value: number;\r\n  status: 'idle' | 'loading' | 'failed';\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  value: 0,\r\n  status: 'idle',\r\n};\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\nexport const incrementAsync = createAsyncThunk(\r\n  'counter/fetchCount',\r\n  async (amount: number) => {\r\n    const response = await fetchCount(amount);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action: PayloadAction<number>) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(incrementAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(incrementAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.value += action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state: RootState) => state.counter.value;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport const incrementIfOdd = (amount: number): AppThunk => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentValue = selectCount(getState());\r\n  if (currentValue % 2 === 1) {\r\n    dispatch(incrementByAmount(amount));\r\n  }\r\n};\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport counterReducer from '../examples/counter/counterSlice';\r\nimport keyboardReducer from '../scenes/keyboard/slice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    keyboard: keyboardReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './scenes/main';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './themes/fonts.css';\r\nimport GlobalStyle from './themes/';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Main />\r\n      <GlobalStyle />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}